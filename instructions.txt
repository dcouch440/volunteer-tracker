Please do not specify a Ruby version in your Gemfile. It makes it more difficult to review projects.

For this code review, please use the following names for your databases:

Production Database: volunteer_tracker
Development Database: volunteer_tracker_test
Resource names will be projects and volunteers <br><br>

When you are ready to submit your project, you must run the following bash command while you are in the root directory of your project:

#_IMPORTANT_###################################################################>
$ pg_dump volunteer_tracker > database_backup.sql
This will create a database dump called database_backup.sql in your project's root directory. volunteer_tracker is the name of the database being dumped. Before you submit, confirm that the root directory of your repository contains database_backup.sql. We will not review your code if this isn't properly set up.


Your README should also include any important instructions for setting up and using your project! You may want to review our lesson on READMEs.




_PAGE SET UP_##############################################

Front page > 
  form to create project > one field -> submit button -> 
    takes you to the project page -> project/:id

    visit '/'
    fill_in('title', :with => 'Teaching Kids to Code')
    click_button('Create Project')
    expect(page).to have_content('Teaching Kids to Code')

change page >
  from home > 
    LINK   > click on project (already made) 
    BUTTON > click on "Edit Project"
    INPUT  > fill in "title"
    BUTTON > click on "Update Project"

delete page >
  visit "/projects/#{id}/edit" >
    BUTTON > "Delete Project"

add volunteer
  visit "/projects/#{project_id}" >
    LINK   > click on "Jasmine"
    INPUT  > fill in "name"
    BUTTON > click on "Update Volunteer"


Database => 
  CREATE DATABASE volunteer_tracker
  CREATE TABLE projects (title varchar, id serial PRIMARY KEY)
  CREATE TABLE volunteers (name varchar , project_id varchar, id serial PRIMARY KEY)